server_tokens off;
add_header X-Frame-Options SAMEORIGIN;
add_header X-Content-Type-Options nosniff;
add_header X-XSS-Protection "1; mode=block";
server {
    listen 80;
    listen [::]:80;
    server_name $hostname.daanmatch.com;

    # Redirect non-https traffic to https
    if ($scheme != "https") {
        return 301 https://$server_name/;
    } # managed by Certbot
    return 302 https://$server_name/;
}

server {
    root /var/www/html;
    client_max_body_size 20M;

    # error_log /var/tmp/log debug;
    listen 443 ssl;
    listen [::]:443 ssl;
    error_page 497 https://$host:443/;
    error_page 400 https://$host:443/;
    error_page 404 https://$host:443/;

    ssl_certificate /etc/letsencrypt/live/daanmatch.com/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/daanmatch.com/privkey.pem; # managed by Certbot

    ssl_session_cache shared:SSL:50m;
    ssl_session_timeout 5m;
    ssl_dhparam /etc/ssl/dhparam.pem; #path to the dhparam.pem file created above

    ssl_prefer_server_ciphers on;
    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;

    ssl_ciphers ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA:ECDHE-RSA-AES128-SHA:DHE-RSA-AES256-SHA256:DHE-RSA-AES128-SHA256:DHE-RSA-AES256-SHA:DHE-RSA-AES128-SHA:ECDHE-RSA-DES-CBC3-SHA:EDH-RSA-DES-CBC3-SHA:AES256-GCM-SHA384:AES128-GCM-SHA256:AES256-SHA256:AES128-SHA256:AES256-SHA:AES128-SHA:DES-CBC3-SHA:HIGH:!aNULL:!eNULL:!EXPORT:!DES:!MD5:!PSK:!RC4;

#     location / /static
        location / {
                # checks for static file, if not found proxy to the app
                try_files $uri @proxy_to_app;
        }

        location @proxy_to_app {
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header HOST $http_host;
                proxy_pass http://127.0.0.1:8080/$request_uri;
                include proxy_params;
                proxy_redirect off;

#                 proxy_set_header Upgrade $http_upgrade;
#                 proxy_set_header Connection "upgrade";
#                 proxy_http_version 1.1;
                 proxy_set_header X-Forwarded-Proto $scheme;
                 proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                 proxy_headers_hash_max_size 1024;
                proxy_headers_hash_bucket_size 128; #                 proxy_set_header Host $host:$server_port;
    }
#     location /static/
# #     {
# #         root /var/www/flask;
# #     }
#     location ~ .(aspx|php|jsp|cgi)$ {
#         return 302 https://$server_name/;
#     }
# }
}